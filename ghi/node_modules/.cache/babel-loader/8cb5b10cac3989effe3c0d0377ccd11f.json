{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const accountApi = createApi({\n  reducerPath: 'recipeHuntApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: process.env.REACT_APP_API_HOST\n  }),\n  endpoints: builder => ({\n    getAccount: builder.query({\n      query: () => ({\n        url: `/token`,\n        credentials: 'include'\n      }),\n      transformResponse: response => response ? response.account : null,\n      providesTags: ['Account']\n    }),\n    logout: builder.mutation({\n      query: () => ({\n        url: '/token',\n        method: 'DELETE',\n        credentials: 'include'\n      }),\n      invalidatesTags: ['Account']\n    }),\n    signup: builder.mutation({\n      query: body => ({\n        url: `${process.env.REACT_APP_API_HOST}/api/accounts`,\n        method: 'POST',\n        body,\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }),\n      invalidatesTags: ['Account']\n    }),\n    login: builder.mutation({\n      query: _ref => {\n        let {\n          username,\n          password\n        } = _ref;\n        const body = new FormData();\n        body.append('username', username);\n        body.append('password', password);\n        return {\n          url: `/token`,\n          method: 'POST',\n          body,\n          credentials: 'include'\n        };\n      },\n      invalidatesTags: ['Account']\n    })\n  })\n});\nexport const {\n  useGetAccountQuery,\n  useLogoutMutation,\n  useLoginMutation,\n  useSignupMutation\n} = accountApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","accountApi","reducerPath","baseQuery","baseUrl","process","env","REACT_APP_API_HOST","endpoints","builder","getAccount","query","url","credentials","transformResponse","response","account","providesTags","logout","mutation","method","invalidatesTags","signup","body","headers","login","username","password","FormData","append","useGetAccountQuery","useLogoutMutation","useLoginMutation","useSignupMutation"],"sources":["/app/src/app/apiSlice.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const accountApi = createApi({\n    reducerPath: 'recipeHuntApi',\n    baseQuery: fetchBaseQuery({\n        baseUrl: process.env.REACT_APP_API_HOST\n    }),\n    endpoints: (builder) => ({\n        getAccount: builder.query({\n            query: () => ({\n                url: `/token`,\n                credentials: 'include',\n            }),\n            transformResponse: (response) => response ? response.account : null,\n            providesTags: ['Account']\n        }),\n        logout: builder.mutation({\n            query: () => ({\n                url: '/token',\n                method: 'DELETE',\n                credentials: 'include'\n            }),\n            invalidatesTags: ['Account']\n        }),\n        signup: builder.mutation({\n            query: (body) => ({\n                url: `${process.env.REACT_APP_API_HOST}/api/accounts`,\n                method: 'POST',\n                body,\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }),\n            invalidatesTags: ['Account']\n        }),\n        login: builder.mutation({\n            query: ({username, password}) => {\n                const body = new FormData();\n                body.append('username', username);\n                body.append('password', password);\n                return {\n                    url: `/token`,\n                    method: 'POST',\n                    body,\n                    credentials: 'include'\n                }\n            },\n            invalidatesTags: ['Account']\n        }),\n    })\n})\n\nexport const {\n    useGetAccountQuery,\n    useLogoutMutation,\n    useLoginMutation,\n    useSignupMutation,\n} = accountApi;\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAEA,OAAO,MAAMC,UAAU,GAAGF,SAAS,CAAC;EAChCG,WAAW,EAAE,eADmB;EAEhCC,SAAS,EAAEH,cAAc,CAAC;IACtBI,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC;EADC,CAAD,CAFO;EAKhCC,SAAS,EAAGC,OAAD,KAAc;IACrBC,UAAU,EAAED,OAAO,CAACE,KAAR,CAAc;MACtBA,KAAK,EAAE,OAAO;QACVC,GAAG,EAAG,QADI;QAEVC,WAAW,EAAE;MAFH,CAAP,CADe;MAKtBC,iBAAiB,EAAGC,QAAD,IAAcA,QAAQ,GAAGA,QAAQ,CAACC,OAAZ,GAAsB,IALzC;MAMtBC,YAAY,EAAE,CAAC,SAAD;IANQ,CAAd,CADS;IASrBC,MAAM,EAAET,OAAO,CAACU,QAAR,CAAiB;MACrBR,KAAK,EAAE,OAAO;QACVC,GAAG,EAAE,QADK;QAEVQ,MAAM,EAAE,QAFE;QAGVP,WAAW,EAAE;MAHH,CAAP,CADc;MAMrBQ,eAAe,EAAE,CAAC,SAAD;IANI,CAAjB,CATa;IAiBrBC,MAAM,EAAEb,OAAO,CAACU,QAAR,CAAiB;MACrBR,KAAK,EAAGY,IAAD,KAAW;QACdX,GAAG,EAAG,GAAEP,OAAO,CAACC,GAAR,CAAYC,kBAAmB,eADzB;QAEda,MAAM,EAAE,MAFM;QAGdG,IAHc;QAIdV,WAAW,EAAE,SAJC;QAKdW,OAAO,EAAE;UACL,gBAAgB;QADX;MALK,CAAX,CADc;MAUrBH,eAAe,EAAE,CAAC,SAAD;IAVI,CAAjB,CAjBa;IA6BrBI,KAAK,EAAEhB,OAAO,CAACU,QAAR,CAAiB;MACpBR,KAAK,EAAE,QAA0B;QAAA,IAAzB;UAACe,QAAD;UAAWC;QAAX,CAAyB;QAC7B,MAAMJ,IAAI,GAAG,IAAIK,QAAJ,EAAb;QACAL,IAAI,CAACM,MAAL,CAAY,UAAZ,EAAwBH,QAAxB;QACAH,IAAI,CAACM,MAAL,CAAY,UAAZ,EAAwBF,QAAxB;QACA,OAAO;UACHf,GAAG,EAAG,QADH;UAEHQ,MAAM,EAAE,MAFL;UAGHG,IAHG;UAIHV,WAAW,EAAE;QAJV,CAAP;MAMH,CAXmB;MAYpBQ,eAAe,EAAE,CAAC,SAAD;IAZG,CAAjB;EA7Bc,CAAd;AALqB,CAAD,CAA5B;AAmDP,OAAO,MAAM;EACTS,kBADS;EAETC,iBAFS;EAGTC,gBAHS;EAITC;AAJS,IAKThC,UALG"},"metadata":{},"sourceType":"module"}