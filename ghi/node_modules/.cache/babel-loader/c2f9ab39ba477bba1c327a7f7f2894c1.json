{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nexport const ingredientApi = createApi({\n  reducerPath: \"ingredientAPI\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: process.env.REACT_APP_API_HOST\n  }),\n  endpoints: builder => ({\n    getIngredientByAccount: builder.query({\n      query: () => ({\n        url: `/api/ingredients/mine`,\n        credentials: \"include\"\n      })\n    }),\n    createIngredient: builder.mutation({\n      query: body => ({\n        url: `/api/ingredients`,\n        method: \"POST\",\n        body,\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }),\n      invalidatesTags: [\"Ingredient\"]\n    }),\n    deleteIngredient: builder.mutation({\n      query: ingredient_id => ({\n        url: `/api/ingredients/${ingredient_id}`,\n        method: \"DELETE\",\n        credentials: \"include\"\n      }),\n      invalidatesTags: [\"Ingredient\"]\n    }),\n    updateIngredient: builder.mutation({\n      query: _ref => {\n        let {\n          body: body,\n          ingredient_id: ingredient_id\n        } = _ref;\n        return {\n          url: `/api/ingredients/${ingredient_id}`,\n          body,\n          method: \"PUT\",\n          credentials: \"include\"\n        };\n      },\n      transformResponse: response => response.ratings,\n      providesTags: [\"Ingredient\"]\n    })\n  })\n});\nexport const {\n  useGetIngredientByAccountQuery,\n  useCreateIngredientMutation,\n  useDeleteIngredientMutation,\n  useUpdateIngredientMutation\n} = ingredientApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","ingredientApi","reducerPath","baseQuery","baseUrl","process","env","REACT_APP_API_HOST","endpoints","builder","getIngredientByAccount","query","url","credentials","createIngredient","mutation","body","method","headers","invalidatesTags","deleteIngredient","ingredient_id","updateIngredient","transformResponse","response","ratings","providesTags","useGetIngredientByAccountQuery","useCreateIngredientMutation","useDeleteIngredientMutation","useUpdateIngredientMutation"],"sources":["/app/src/app/ingredientSlice.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nexport const ingredientApi = createApi({\n  reducerPath: \"ingredientAPI\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: process.env.REACT_APP_API_HOST,\n  }),\n  endpoints: (builder) => ({\n    getIngredientByAccount: builder.query({\n      query: () => ({\n        url: `/api/ingredients/mine`,\n        credentials: \"include\",\n      }),\n    }),\n    createIngredient: builder.mutation({\n      query: (body) => ({\n        url: `/api/ingredients`,\n        method: \"POST\",\n        body,\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }),\n      invalidatesTags: [\"Ingredient\"],\n    }),\n    deleteIngredient: builder.mutation({\n      query: (ingredient_id) => ({\n        url: `/api/ingredients/${ingredient_id}`,\n        method: \"DELETE\",\n        credentials: \"include\",\n      }),\n      invalidatesTags: [\"Ingredient\"],\n    }),\n    updateIngredient: builder.mutation({\n      query: ({ body: body, ingredient_id: ingredient_id }) => ({\n        url: `/api/ingredients/${ingredient_id}`,\n        body,\n        method: \"PUT\",\n        credentials: \"include\",\n      }),\n      transformResponse: (response) => response.ratings,\n      providesTags: [\"Ingredient\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetIngredientByAccountQuery,\n  useCreateIngredientMutation,\n  useDeleteIngredientMutation,\n  useUpdateIngredientMutation,\n} = ingredientApi;\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAEA,OAAO,MAAMC,aAAa,GAAGF,SAAS,CAAC;EACrCG,WAAW,EAAE,eADwB;EAErCC,SAAS,EAAEH,cAAc,CAAC;IACxBI,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC;EADG,CAAD,CAFY;EAKrCC,SAAS,EAAGC,OAAD,KAAc;IACvBC,sBAAsB,EAAED,OAAO,CAACE,KAAR,CAAc;MACpCA,KAAK,EAAE,OAAO;QACZC,GAAG,EAAG,uBADM;QAEZC,WAAW,EAAE;MAFD,CAAP;IAD6B,CAAd,CADD;IAOvBC,gBAAgB,EAAEL,OAAO,CAACM,QAAR,CAAiB;MACjCJ,KAAK,EAAGK,IAAD,KAAW;QAChBJ,GAAG,EAAG,kBADU;QAEhBK,MAAM,EAAE,MAFQ;QAGhBD,IAHgB;QAIhBH,WAAW,EAAE,SAJG;QAKhBK,OAAO,EAAE;UACP,gBAAgB;QADT;MALO,CAAX,CAD0B;MAUjCC,eAAe,EAAE,CAAC,YAAD;IAVgB,CAAjB,CAPK;IAmBvBC,gBAAgB,EAAEX,OAAO,CAACM,QAAR,CAAiB;MACjCJ,KAAK,EAAGU,aAAD,KAAoB;QACzBT,GAAG,EAAG,oBAAmBS,aAAc,EADd;QAEzBJ,MAAM,EAAE,QAFiB;QAGzBJ,WAAW,EAAE;MAHY,CAApB,CAD0B;MAMjCM,eAAe,EAAE,CAAC,YAAD;IANgB,CAAjB,CAnBK;IA2BvBG,gBAAgB,EAAEb,OAAO,CAACM,QAAR,CAAiB;MACjCJ,KAAK,EAAE;QAAA,IAAC;UAAEK,IAAI,EAAEA,IAAR;UAAcK,aAAa,EAAEA;QAA7B,CAAD;QAAA,OAAmD;UACxDT,GAAG,EAAG,oBAAmBS,aAAc,EADiB;UAExDL,IAFwD;UAGxDC,MAAM,EAAE,KAHgD;UAIxDJ,WAAW,EAAE;QAJ2C,CAAnD;MAAA,CAD0B;MAOjCU,iBAAiB,EAAGC,QAAD,IAAcA,QAAQ,CAACC,OAPT;MAQjCC,YAAY,EAAE,CAAC,YAAD;IARmB,CAAjB;EA3BK,CAAd;AAL0B,CAAD,CAA/B;AA6CP,OAAO,MAAM;EACXC,8BADW;EAEXC,2BAFW;EAGXC,2BAHW;EAIXC;AAJW,IAKT7B,aALG"},"metadata":{},"sourceType":"module"}